name: Generate Documentation
on:
  push:
    branches:
      - master
      - chore/autodoc-workflow
  workflow_dispatch:

jobs:
  build-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install pdoc black loguru ks_digital_twin

      - name: Generate documentation
        run: |
          export PATH=$pythonLocation/bin:$PATH
          pdoc --output-dir ./docs kos_sdk

      - name: Setup GitHub CLI
        run: |
          gh auth setup-git
          gh auth status
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create fork if doesn't exist
        id: check-fork
        run: |
          FORK_EXISTS=$(gh repo list --fork | grep kscalelabs/api-docs || echo "")
          if [ -z "$FORK_EXISTS" ]; then
            echo "Creating fork of kscalelabs/api-docs"
            gh repo fork kscalelabs/api-docs --clone=false
          else
            echo "Fork already exists"
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout fork
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/api-docs
          path: api-docs-fork
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Copy documentation to fork
        run: |
          mkdir -p api-docs-fork/kos-sdk
          cp -r docs/kos_sdk/* api-docs-fork/kos-sdk/

      - name: Create PR from fork
        run: |
          cd api-docs-fork
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

          # Create a new branch
          BRANCH_NAME="update-docs-${{ github.sha }}"
          git checkout -b $BRANCH_NAME

          # Add and commit changes
          git add .
          git commit -m "Update documentation from ${{ github.sha }}" || { echo "No changes to commit"; exit 0; }

          # Push to fork
          git push -u origin $BRANCH_NAME

          # Create PR from fork to original repo
          gh pr create \
            --repo kscalelabs/api-docs \
            --title "Update documentation" \
            --body "Auto-generated documentation update from commit ${{ github.sha }}" \
            --head ${{ github.repository_owner }}:$BRANCH_NAME
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
